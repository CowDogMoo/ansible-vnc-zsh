---
- name: Include OS-Specific variables
  ansible.builtin.include_vars: "{{ ansible_os_family }}.yaml"

- name: Include OS-Specific tasks
  ansible.builtin.include_tasks: "{{ ansible_os_family }}.yaml"

- name: Install vncpwd
  include: vncpwd.yaml

- name: Create {{ vnc_users }}
  become: true
  ansible.builtin.user:
    name: "{{ item.username }}"
    shell: /bin/zsh
  with_items: "{{ vnc_users }}"

- name: Give applicable {{ vnc_users }} sudoers access
  become: true
  ansible.builtin.blockinfile:
    path: /etc/sudoers
    insertafter: "root    ALL=(ALL)       ALL"
    block: "{{ item.username }} ALL=(ALL:ALL) NOPASSWD:ALL"
  when:
    - item.sudo
  with_items: "{{ vnc_users }}"

- name: Create .vnc dirs
  ansible.builtin.file:
    path: "/home/{{ item.username }}/.vnc"
    state: directory
    mode: 0700
    owner: "{{ item.username }}"
    group: "{{ item.usergroup | default(item.username) }}"
  changed_when: false
  with_items: "{{ vnc_users }}"

- name: Generate random passwords for each user in {{ vnc_users }} with vnc_pw.py
  vnc_pw:
    vnc_users: "{{ vnc_users }}"
  register: updated_data

- name: Update {{ vnc_users }} with the random generated passwords
  ansible.builtin.set_fact:
    vnc_users_pw: "{{ vnc_users_pw | default([]) + [item] }}"
  with_items: "{{ updated_data.result }}"

- name: Set random password for {{ vnc_users_pw }} if one isn't already set
  ansible.builtin.shell: |
    set -o pipefail
    if [[ ! -f /home/{{ item.username }}/.vnc/passwd ]]; then
      printf "{{ item.pass }}\n{{ item.pass }}\n\n" | vncpasswd /home/{{ item.username }}/.vnc/passwd
    fi
  args:
    chdir: "/home/{{ item.username }}/.vnc"
    creates: "/home/{{ item.username }}/.vnc/passwd"
    executable: /bin/zsh
  become: true
  become_user: "{{ item.username }}"
  with_items: "{{ vnc_users_pw }}"

- name: Set perms on vnc passwords
  ansible.builtin.file:
    path: "/home/{{ item.username }}/.vnc/passwd"
    owner: "{{ item.username }}"
    group: "{{ item.usergroup | default(item.username) }}"
    mode: 0700
  with_items: "{{ vnc_users }}"

- name: Configure systemd auto-start service
  include: systemd.yaml
  when: setup_systemd|bool

- name: Install omz for vnc_users
  include: omz.yaml
  when: omz_install_script_url is defined

- name: Create docker-entrypoint.sh
  ansible.builtin.template:
    src: docker-entrypoint.sh.j2
    dest: "/run/docker-entrypoint.sh"
    mode: 0755
  when: not setup_systemd|bool
